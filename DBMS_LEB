PART 2 SECTION C 
____________________________________________________________________________________________________________________________________________

CREATE TABLE ACCOUNT(
	ACTNO INT ,
	CNAME VARCHAR(100),
	BNAME VARCHAR(100),
	AMOUNT DECIMAL(8,2),
	ADATE DATE
)

SELECT * FROM [dbo].[ACCOUNT]


INSERT INTO ACCOUNT VALUES  (101 , 'ANIL' , 'VRCE' , 1000.00 ,  '1-MAR-1995'),
							(102 , 'SUNIL','AJIN',5000.00 ,  '4-JAN-1996'),
							(103 , 'MEHUL' , 'KAROLBAGH' , 3500.00 ,  '17-NOV-1995'),
							(104 , 'MADHURI' ,'CHANDI' , 1200.00 ,  '17-DEC-1995'),
							(105 , 'PRMOD' , 'M.G.ROAD' , 3000.00 ,  '27-MAR-1996'),
							(106 , 'SANDIP ' , 'ANDHERI' , 2000.00 ,  '31-MAR-1996'),
							(107 , 'SIVANI' , 'VIRAR' , 1000.00 ,  '5-AUG-1995'),
							(108 , 'KRANTI' , 'NEHRU PLACE ' , 5000.00 ,  '2-JUL-1995'),
							(109 , 'MINU' , 'POEAI' , 7000.00 ,  '10-SEP-1995')
-------------------------------------------------------------------------------------------------------------------------------
leb 16 
1.=> use MCA_135 // CREATE DATABACE IN MONGODB 
2.=> switched to db MCA_135 // YOU INTER IN DATABACE 
3.=> db.createCollection("DEPOSIT")// CREATE NEW COLLECTION IN DB 
   { ok: 1 }
4.=> db.DEPOSIT.insertMany([
    { ACTNO: 101, CNAME: "ANIL", BNAME: "VRCE", AMOUNT: 1000.00, ADATE: new Date("1995-03-01") },
    { ACTNO: 102, CNAME: "SUNIL", BNAME: "AJNI", AMOUNT: 5000.00, ADATE: new Date("1996-01-04") },
    { ACTNO: 103, CNAME: "MEHUL", BNAME: "KAROLBAGH", AMOUNT: 3500.00, ADATE: new Date("1995-11-17") },
    { ACTNO: 104, CNAME: "MADHURI", BNAME: "CHANDI", AMOUNT: 1200.00, ADATE: new Date("1995-12-17") },
    { ACTNO: 105, CNAME: "PRMOD", BNAME: "M.G. ROAD", AMOUNT: 3000.00, ADATE: new Date("1996-03-27") },
    { ACTNO: 106, CNAME: "SANDIP", BNAME: "ANDHERI", AMOUNT: 2000.00, ADATE: new Date("1996-03-31") },
    { ACTNO: 107, CNAME: "SHIVANI", BNAME: "VIRAR", AMOUNT: 1000.00, ADATE: new Date("1995-09-05") },
    { ACTNO: 108, CNAME: "KRANTI", BNAME: "NEHRU PLACE", AMOUNT: 5000.00, ADATE: new Date("1995-07-02") }
]) // INSERT DATA MANNY ROWS IN COLLECTION 
    	acknowledged: true
5.=> db.DEPOSIT.find().forEach(printjson)
6.=> db.DEPOSIT.find().pretty()
7.=> db.DEPOSIT.findOne() // display only one 
8.=> db.DEPOSIT.insertOne({ACTON:109,CNAME:'KIRTI', BNAME:'VIRAR', AMOUNT:3000.00, ADATE:3-5-97})
9.=> db.DEPOSIT.insertMany([{ ACTON: 110,
  CNAME: 'MITALI',
  BNAME: 'ANDHERI',
  AMOUNT: 4500,
  ADATE: "1995-09-04"},{
  
  ACTON: 111,
  CNAME: 'RAJIV',
  BNAME: 'NEHRU PLACE',
  AMOUNT: 7000,
  ADATE: "1998-10-2"
}]) 
10.=> db.DEPOSIT.find({},{CNAME:1, BNAME:1, AMOUNT:1})
11.=> db.DEPOSIT.find().sort({CNAME:1}) //ascending order by CNAME
12.=> db.DEPOSIT.find().sort({BNAME:-1}) //  descending order by BNAME.
13.=> db.DEPOSIT.find().sort({ACTNO: 1 , AMOUNT:-1 }) // ascending order by ACTNO and descending order by AMOUNT.
14.=> db.DEPOSIT.find().limit(2) // only two documents of Deposit collection
15.=> db.DEPOSIT.find().skip(2).limit(1) // 3rd document of Deposit collection
16.=> db.DEPOSIT.find().skip(5).limit(2) //  6th and 7th documents of Deposit collection
17.=> db.DEPOSIT.countDocuments() //  count of documents in Deposit collection
18.=> db.DEPOSIT.find().sort({ AMOUNT:-1})
_____________________________________________________________________________________________________________________________________________
LEB  17 
1.=> db.createCollection("employee")
2.=> db.employee.insertMany([
    { EID: 1, ENAME: "Nick", GENDER: "Male", JoiningDate: new Date("2013-01-01"), Salary: 4000, City: "London" },
    { EID: 2, ENAME: "Julian", GENDER: "Female", JoiningDate: new Date("2014-10-01"), Salary: 3000, City: "New York" },
    { EID: 3, ENAME: "Roy", GENDER: "Male", JoiningDate: new Date("2016-06-01"), Salary: 3500, City: "London" },
    { EID: 4, ENAME: "Tom", GENDER: "Male", JoiningDate: null, Salary: 4500, City: "London" },
    { EID: 5, ENAME: "Jerry", GENDER: "Male", JoiningDate: new Date("2013-02-01"), Salary: 2800, City: "Sydney" },
    { EID: 6, ENAME: "Philip", GENDER: "Male", JoiningDate: new Date("2015-01-01"), Salary: 7000, City: "New York" },
    { EID: 7, ENAME: "Sara", GENDER: "Female", JoiningDate: new Date("2017-08-01"), Salary: 4800, City: "Sydney" },
    { EID: 8, ENAME: "Emily", GENDER: "Female", JoiningDate: new Date("2015-01-01"), Salary: 5500, City: "New York" },
    { EID: 9, ENAME: "Michael", GENDER: "Male", JoiningDate: null, Salary: 6500, City: "London" },
    { EID: 10, ENAME: "John", GENDER: "Male", JoiningDate: new Date("2015-01-01"), Salary: 8800, City: "London" }
])
1.=> db.employee.find({GENDER:"Male"})
2.=> db.employee.find({City: 'London'})
3.=> db.employee.find({Salary:{$gt:3500 }} )
4.=> db.employee.find({JoiningDate:{$lt:new Date("2015-01-01")}})
5.=> db.employee.find({ EID: {$gte:7 } })
6.=> db.employee.find({ City :{$in:['London' , 'New York'] } })
7.=> db.employee.find({ City :{$nin:['London' , 'New York'] } })
8.=> db.employee.find({City: 'London'},{EID: 1} )
9.=> db.employee.find({City: 'New York'} ).limit(2).skip(2)
10.=> db.employee.find({ City: 'Sydney' , GENDER: 'Male' }  )
11.=> db.employee.find({City:{$in :["London" , "Sydney" ]}}, {  ENAME:1 , City: 1 , Salary:1})
12.=> db.employee.find({Salary:{$gt :7000 }}, { EID: 1, ENAME:1 , City: 1 , Salary:1})
13.=> db.employee.find({ENAME: /^e/i} )
14.=> db.employee.find({ENAME: /^[sm]/i} )
15.=> db.EMPLOYEE.find({City:/^[a-m]/i})
16.=> db.EMPLOYEE.find({City:/ney$/i})
17.=> db.EMPLOYEE.find({City:/n/i})
18.=> db.EMPLOYEE.find({ENAME:/^e..../i})
19.=> db.EMPLOYEE.find({ENAME:/^s.*a$/i})
20.=> db.EMPLOYEE.find({ENAME:/^phi/i} , {EID :1,ENAME:1, Salary:1, City:1})
21.=> db.EMPLOYEE.find({City:/dne/i} , {EID :1,ENAME:1, JoiningDate:1, City:1})
22.=> db.EMPLOYEE.find({City:{$nin:['London','Sydney']}} , {EID :1,ENAME:1, JoiningDate:1, City:1})
23.=>db.EMPLOYEE.deleteMany({City: 'New York'})
24.=>db.EMPLOYEE.updateOne({ENAME: 'Nick'} , {$set:{ENAME:"Naysa" ,GENDER:"Female"  } })
_____________________________________________________________________________________________________________________________________________
PART : B 
1.=> db.STUDENT.insertMany([
    {
        "ROLLNO": 101,
        "SNAME": "Vina",
        "DEPARTMENT": "CE",
        "FEES": 15000,
        "SEM": 3,
        "GENDER": "Female",
        "CITY": "Rajkot"
    },
    {
        "ROLLNO": 102,
        "SNAME": "Krisha",
        "DEPARTMENT": "EC",
        "FEES": 8000,
        "SEM": 5,
        "GENDER": "Female",
        "CITY": "Ahmedabad"
    },
    {
        "ROLLNO": 103,
        "SNAME": "Priti",
        "DEPARTMENT": "Civil",
        "FEES": 12000,
        "SEM": 7,
        "GENDER": "Female",
        "CITY": "Baroda"
    },
    {
        "ROLLNO": 104,
        "SNAME": "Mitul",
        "DEPARTMENT": "CE",
        "FEES": 15000,
        "SEM": 3,
        "GENDER": "Male",
        "CITY": "Rajkot"
    },
    {
        "ROLLNO": 105,
        "SNAME": "Keshav",
        "DEPARTMENT": "CE",
        "FEES": 15000,
        "SEM": 3,
        "GENDER": "Male",
        "CITY": "Jamnagar"
    },
    {
        "ROLLNO": 106,
        "SNAME": "Zarna",
        "DEPARTMENT": "Civil",
        "FEES": 12000,
        "SEM": 5,
        "GENDER": "Female",
        "CITY": "Ahmedabad"
    },
    {
        "ROLLNO": 107,
        "SNAME": "Nima",
        "DEPARTMENT": "EE",
        "FEES": 9000,
        "SEM": 5,
        "GENDER": "Female",
        "CITY": "Rajkot"
    },
    {
        "ROLLNO": 108,
        "SNAME": "Dhruv",
        "DEPARTMENT": "Mechanical",
        "FEES": 10000,
        "SEM": 5,
        "GENDER": "Male",
        "CITY": "Rajkot"
    },
    {
        "ROLLNO": 109,
        "SNAME": "Krish",
        "DEPARTMENT": "Mechanical",
        "FEES": 10000,
        "SEM": 7,
        "GENDER": "Male",
        "CITY": "Baroda"
    },
    {
        "ROLLNO": 110,
        "SNAME": "Zeel",
        "DEPARTMENT": "EE",
        "FEES": 9000,
        "SEM": 3,
        "GENDER": "Female",
        "CITY": "Jamnagar"
    }
]
)
1.=> db.STUDENT.find({GENDER: 'Female'})
2.=> db.STUDENT.find({ CITY: 'Rajkot'})
3.=> db.STUDENT.find({ SEM: 7})
4.=> db.STUDENT.find({SEM:{$ne:3}})
5.=> db.STUDENT.find({ROLLNO:{$gt:107}})
6.=> db.STUDENT.find({CITY:{$in:["Jamnagar","Baroda"]}})
7.=> db.STUDENT.find({FEES:{$lt:9000}})
8.=> db.STUDENT.find({DEPARTMENT:"Mechanical"}, {ROLLNO:1})
9.=> db.STUDENT.find( {CITY: 'Baroda'}).limit(2)
10.=> db.STUDENT.find({GENDER: 'Male' ,  SEM: 3})
11.=> db.STUDENT.find({ ROLLNO:{$lt:105} } , {SNAME:1 ,CITY:1, FEES:1 }) 
12.=> db.STUDENT.find({SNAME:/^k/i})
13.=> db.STUDENT.find({SNAME:/^[dz]/i})
14.=> db.STUDENT.find({SNAME:/^[a-r]/i})
15.=> db.STUDENT.find({SNAME:/^p.*i$/i})
16.=> db.STUDENT.find({DEPARTMENT:/^c/i})
17.=> db.STUDENT.find({CITY:/med/i} , {SNAME:1 ,SEM:1, FEES:1 , DEPARTMENT:1  , CITY:1})
18.=> db.STUDENT.find({CITY:{$nin:['Rajkot' ,'Baroda' ]}} , {SNAME:1 ,SEM:1, FEES:1 , DEPARTMENT:1 , CITY:1})
19.=> db.STUDENT.deleteMany({ CITY: 'Jamnagar' })
20.=> db.STUDENT.updateOne({SNAME: 'Krish'} , {$set:{SNAME: 'fenny', GENDER: 'Female' }} )
_____________________________________________________________________________________________________________________________________________
PART : C 
--------
1.=> db.STUDENT.find({CITY: 'Ahmedabad'}).limit(2).skip(2)
2.=> db.STUDENT.find({CITY: 'Baroda' ,DEPARTMENT: 'CE' } , {ROLLNO: 1,  SNAME:1,  DEPARTMENT:1,  FEES:1})
3.=> db.STUDENT.find({CITY:/oda$/i })
4.=> db.STUDENT.find({SNAME:/v/i })
5.=> db.STUDENT.find({SNAME:/v.../i })
_____________________________________________________________________________________________________________________________________________
LEB 18 
db.BRANCH.insertMany([
    { BNAME: "VRCE", CITY: "NAGPUR" },
    { BNAME: "AJNI", CITY: "NAGPUR" },
    { BNAME: "KAROLBAGH", CITY: "DELHI" },
    { BNAME: "CHANDI", CITY: "DELHI" },
    { BNAME: "DHARAMPETH", CITY: "NAGPUR" },
    { BNAME: "M.G. ROAD", CITY: "BANGLORE" },
    { BNAME: "ANDHERI", CITY: "BOMBAY" },
    { BNAME: "VIRAR", CITY: "BOMBAY" },
    { BNAME: "NEHRU PLACE", CITY: "DELHI" },
    { BNAME: "POWAI", CITY: "BOMBAY" }
]);
db.CUSTOMERS.insertMany([
    { CNAME: "ANIL", CITY: "CALCUTTA" },
    { CNAME: "SUNIL", CITY: "DELHI" },
    { CNAME: "MEHUL", CITY: "BARODA" },
    { CNAME: "MANDAR", CITY: "PATNA" },
    { CNAME: "MADHURI", CITY: "NAGPUR" },
    { CNAME: "PRAMOD", CITY: "NAGPUR" },
    { CNAME: "SANDIP", CITY: "SURAT" },
    { CNAME: "SHIVANI", CITY: "BOMBAY" },
    { CNAME: "KRANTI", CITY: "BOMBAY" },
    { CNAME: "NAREN", CITY: "BOMBAY" }
]);
db.BORROW.insertMany([
    { LOANNO: 201, CNAME: "ANIL", BNAME: "VRCE", AMOUNT: 1000.00 },
    { LOANNO: 206, CNAME: "MEHUL", BNAME: "AJNI", AMOUNT: 5000.00 },
    { LOANNO: 311, CNAME: "SUNIL", BNAME: "DHARAMPETH", AMOUNT: 3000.00 },
    { LOANNO: 321, CNAME: "MADHURI", BNAME: "ANDHERI", AMOUNT: 2000.00 },
    { LOANNO: 375, CNAME: "PRMOD", BNAME: "VIRAR", AMOUNT: 8000.00 },
    { LOANNO: 481, CNAME: "KRANTI", BNAME: "NEHRU PLACE", AMOUNT: 3000.00 }
]);																							           
db.DEPOSIT.insertMany([
    { ACTNO: 101, CNAME: "ANIL", BNAME: "VRCE", AMOUNT: 1000.00, ADATE: new Date("1995-03-01") },
    { ACTNO: 102, CNAME: "SUNIL", BNAME: "AJNI", AMOUNT: 5000.00, ADATE: new Date("1996-01-04") },
    { ACTNO: 103, CNAME: "MEHUL", BNAME: "KAROLBAGH", AMOUNT: 3500.00, ADATE: new Date("1995-11-17") },
    { ACTNO: 104, CNAME: "MADHURI", BNAME: "CHANDI", AMOUNT: 1200.00, ADATE: new Date("1995-12-17") },
    { ACTNO: 105, CNAME: "PRMOD", BNAME: "M.G. ROAD", AMOUNT: 3000.00, ADATE: new Date("1996-03-27") },
    { ACTNO: 106, CNAME: "SANDIP", BNAME: "ANDHERI", AMOUNT: 2000.00, ADATE: new Date("1996-03-31") },
    { ACTNO: 107, CNAME: "SHIVANI", BNAME: "VIRAR", AMOUNT: 1000.00, ADATE: new Date("1995-09-05") },
    { ACTNO: 108, CNAME: "KRANTI", BNAME: "NEHRU PLACE", AMOUNT: 5000.00, ADATE: new Date("1995-07-02") },
    { ACTNO: 109, CNAME: "MINU", BNAME: "POWAI", AMOUNT: 7000.00, ADATE: new Date("1995-08-10") }
]);
1.=> db.DEPOSIT.find()
2.=> db.BRANCH.find()
3.=> db.CUSTOMERS.find()
4.=> db.BORROW.insertOne({ LOANNO: 550, CNAME: "JAY", BNAME: "AJNI", AMOUNT:null })
5.=> db.CUSTOMERS.find({},{ ACTNO: 1,  CNAME: 1,  AMOUNT:1})
6.=> db.BORROW.find({},{LOANNO:1,AMOUNT:1})
7.=> db.BORROW.find({ AMOUNT:{$gt:5000.00} })
8.=> db.DEPOSIT.find({ACTNO: 106})
9.=> db.BORROW.find({ AMOUNT: 5000.00})
10.=> db.DEPOSIT.find({ADATE: new Date("1996-01-12")})
__________________________________________________________________________________________________________________________
PART - B
--------
1.=> db.DEPOSIT.find({ACTNO:{$lt:105}})
2.=> db.CUSTOMERS.find({CITY:{$in:['NAGPUR' , 'DELHI']}})
3.=> db.DEPOSIT.find({AMOUNT:{$gt:4000},  ACTNO:{$lt:105}})
4.=> db.DEPOSIT.find({AMOUNT:{$gte:3000 , $lte:8000} })
5.=> db.CUSTOMERS.find({CITY:{$nin:['ANDHERI']}})
6.=> db.DEPOSIT.find({BNAME:{$in:['AJNI' ,'KAROLBAGH' , 'M.G. ROAD' ]}} , {ACTNO:1 ,CNAME:1 , AMOUNT:1  })
7.=> db.DEPOSIT.find().limit(5)
8.=> db.DEPOSIT.find({AMOUNT:{$gt:1000}}).limit(3)
9.=> db.BORROW.find({ BNAME: {$nin:['ANDHERI']} }, {  LOANNO: 1,  CNAME:1}).limit(5)
10.=> db.CUSTOMERS.distinct('CITY')
__________________________________________________________________________________________________________________________
PART : C 
---------
1.=> db.BRANCH.distinct("BNAME")
2.=> db.CUSTOMERS.find({} , {CITY:1}).sort({CITY:1})
3.=> db.DEPOSIT.find().sort({ACTNO:-1})
4.=> db.DEPOSIT.updateMany({ AMOUNT: 3000 } , { $set:{ AMOUNT: 5000} })
5.=> db.BORROW.updateOne({CNAME: 'ANIL'} , {$set:{ BNAME:'C.G. ROAD' }})
6.=> db.DEPOSIT.updateOne({ CNAME: 'SANDIP' } , { $set:{ ACTNO:111 , AMOUNT:5000  }})
7.=> error in this query ----> .updateMany(
    { AMOUNT: { $type: "number" } }, 
    { $mul: { AMOUNT: 1.10 } }
)
8.=> db.DEPOSIT.updateMany({ACTNO:{$gte:103 , $lte:107}} , { $set:{AMOUNT:5000} })
9.=> db.BORROW.updateOne({ LOANNO: 321} , {$set:{AMOUNT: null}}) 
10.=> db.BORROW.find({AMOUNT: null})

__________________________________________________________________________________________________________________________
LEB 19 
db.STUDENT.insertMany([
    { RollNo: 101, Name: "Keyur", Birthdate: new Date("1992-01-05"), SPI: 8.5, City: "Rajkot", Backlog: 2, Branch: "CE" },
    { RollNo: 102, Name: "Hardik", Birthdate: new Date("1994-02-15"), SPI: 9.0, City: "Ahmedabad", Backlog: 0, Branch: "CE" },
    { RollNo: 103, Name: "Kajal", Birthdate: new Date("1996-03-14"), SPI: 10.00, City: "Baroda", Backlog: 0, Branch: "IT" },
    { RollNo: 104, Name: "Bhoomi", Birthdate: new Date("1995-06-23"), SPI: 8.90, City: "Ahmedabad", Backlog: 1, Branch: "ICT" },
    { RollNo: 105, Name: "Harmit", Birthdate: new Date("1994-02-15"), SPI: 9.80, City: "Rajkot", Backlog: 1, Branch: "IT" },
    { RollNo: 106, Name: "Jay", Birthdate: new Date("1994-02-15"), SPI: 7.9, City: "Rajkot", Backlog: 2, Branch: "CE" }
]);
1.=> db.STUDENT.find({$and : [{RollNo:{$gt:103}} ,{Backlog : {$gt:0}}, {Branch : {$in : ['CE','IT']}} ] },{RollNo:1,Name:1})
2.=> db.STUDENT.find({
    SPI: { $gte: 8, $lt: 9 },
    branch: { $in: ["CE", "IT"] }
}, { name: 1 });

3.=> db.STUDENT.find({Branch : {$not : /CE/}})

4.=> db.STUDENT.find({},{RollNo:1,Name:1}).limit(3)

5.=> db.STUDENT.find({SPI : {$gt:8.5}}).limit(3)
6.=> db.STUDENT.distinct('City')
7.=> db.STUDENT.distinct('Branch')
8.=> db.STUDENT.find().sort({Backlog:-1,SPI:1})
9.=> db.STUDENT.updateMany({Name: "Jay"},{$set : {City:'Jamnagar',Branch:'MCA'}})
10.=> db.collectionName.updateMany(
  { name: { $in: ["Keyur", "Bhoomi"] } },
  { $set: { backlog: null } }
)
__________________________________________________________________________________________________________________________
LEB 20 
db.EMPLOYEE.insertMany([
    { EmpNo: 101, EmpName: "Keyur", JoiningDate: new Date("2002-01-05"), Salary: 12000.00, City: "Rajkot" },
    { EmpNo: 102, EmpName: "Hardik", JoiningDate: new Date("2004-02-15"), Salary: 14000.00, City: "Ahmedabad" },
    { EmpNo: 103, EmpName: "Kajal", JoiningDate: new Date("2006-03-14"), Salary: 15000.00, City: "Baroda" },
    { EmpNo: 104, EmpName: "Bhoomi", JoiningDate: new Date("2005-06-23"), Salary: 12500.00, City: "Ahmedabad" },
    { EmpNo: 102, EmpName: "Harmit", JoiningDate: new Date("2004-02-15"), Salary: 14000.00, City: "Rajkot" }
]);

db.ACCOUNT.insertMany([
    { ACTNO: 101, CNAME: "ANIL", BNAME: "VRCE", AMOUNT: 1000.00, ADATE: new Date("1995-03-01") },
    { ACTNO: 102, CNAME: "SUNIL", BNAME: "AJNI", AMOUNT: 5000.00, ADATE: new Date("1996-01-04") },
    { ACTNO: 103, CNAME: "MEHUL", BNAME: "KAROLBAGH", AMOUNT: 3500.00, ADATE: new Date("1995-11-17") },
    { ACTNO: 104, CNAME: "MADHURI", BNAME: "CHANDI", AMOUNT: 1200.00, ADATE: new Date("1995-12-17") },
    { ACTNO: 105, CNAME: "PRMOD", BNAME: "M.G. ROAD", AMOUNT: 3000.00, ADATE: new Date("1996-03-27") },
    { ACTNO: 106, CNAME: "SANDIP", BNAME: "ANDHERI", AMOUNT: 2000.00, ADATE: new Date("1996-03-31") },
    { ACTNO: 107, CNAME: "SHIVANI", BNAME: "VIRAR", AMOUNT: 1000.00, ADATE: new Date("1995-09-05") },
    { ACTNO: 108, CNAME: "KRANTI", BNAME: "NEHRU PLACE", AMOUNT: 5000.00, ADATE: new Date("1995-07-02") },
    { ACTNO: 109, CNAME: "MINU", BNAME: "POWAI", AMOUNT: 7000.00, ADATE: new Date("1995-08-10") }
]);
1.=> db.EMPLOYEE.find(
    {
        Salary: { $gt: 13000 },
        City: { $in: ["Rajkot", "Baroda"] }
    },
    
)
2.=> db.EMPLOYEE.find({},{EmpName:1})
3.=> db.EMPLOYEE.distinct("City")
4.=> db.EMPLOYEE.updateMany(
  { EmpName: { $in: ["Keyur", "Bhoomi"] } },
  { $set: { City: null } }
)
5.=> db.EMPLOYEE.find({City: null})
6.=> db.EMPLOYEE.deleteMany({Salary:{$gte:14000 }} , {})
NOTE : QUERY 7 AND 8 COMPLITED
9.=> db.EMPLOYEE.deleteMany({})
------------
PART : B   |
------------
2.=>db.ACCOUNT.find({} , {CNAME:1 , _id:0}).sort({AMOUNT:1 , CNAME:-1 })
5.=>db.ACCOUNT.deleteMany({ AMOUNT:{$gte: 4000 }})
6.=> db.ACCOUNT.deleteMany({ ADATE: {$gt:new Date('1995-10-01')}})
_________________________________________________________________________________________________________________________
LEB : 21
---------
PART : A
---------
 (Use EMPLOYEE collection of Lab No 17) 


1. Display distinct city. 
=> db.EMPLOYEE.distinct("City");


2. Display city wise number of persons. 
=> db.EMPLOYEE.aggregate([{$group:{_id:"$City",count:{$sum: 1}}}]);

3. Display sum of salary in your collection. 
=> db.EMPLOYEE.aggregate([{ $group: { _id: null, totalSalary: { $sum: "$Salary" } } }]);


4. Display average of salary in your document.
=> db.EMPLOYEE.aggregate([{ $group: { _id: null, averageSalary: { $avg: "$Salary" } } }]);


5. Display maximum and minimum salary of your document. 
=> db.EMPLOYEE.aggregate([{$group:{_id:null,MaxSalary:{$max: "$Salary"},MinSalary: {$min: "$Salary"}}}])


6. Display city wise total salary in your collection. 
=>db.EMPLOYEE.aggregate([{ $group: { _id: "$City", totalSalary: { $sum: "$Salary" } } }]);



7. Display gender wise maximum salary in your collection. 
=> db.EMPLOYEE.aggregate([{$group:{_id:"$GENDER",GERNDERWISETOTALSALRY:{$sum: "$Salary"}}}])


8. Display city wise maximum and minimum salary. 
=> db.EMPLOYEE.aggregate([{$group:{_id:"$City",CITY_WISE_MAXSALARY:{$max: "$Salary"},CITY_WISE_MINSALRY: {$min: "$Salary"}}}])

9. Display count of persons lives in Sydney city in your collection. 
=> db.EMPLOYEE.aggregate([{ $match: { City: "Sydney" } },{ $count: "totalPersonsInSydney" }]);


10. Display average salary of New York city. 
=> db.EMPLOYEE.aggregate([{ $match: { City: "New York" } },{ $group: { _id: null, avgSalaryNY: { $avg: "$Salary" } } }]);

---------
PART : B
---------
2.=> db.STUDENT.aggregate([{$group:{_id:'$CITY' , student_city_number:{$sum:1}}}])
3.=> db.STUDENT.aggregate([{$group:{_id:null , total_fees:{$sum:'$FEES'}  }}])
4.=> db.STUDENT.aggregate([{$group:{_id:null , total_fees:{$avg:'$FEES'}  }}])
5.=> db.STUDENT.aggregate([{$group:{_id:null , max_fees:{$max:'$FEES'}  , minimum:{$min:'$FEES'} }}])
---------
PART : C 
---------
1.=> db.STUDENT.aggregate([{$group:{_id:'$DEPARTMENT' , total_fees:{$sum:'$FEES'}  }}])
2.=> db.STUDENT.aggregate([{$group:{_id:'$GENDER' , max_fees:{$max:'$FEES'}  , minimum:{$min:'$FEES'} }}])
3.=> db.STUDENT.aggregate([{$group:{_id:'$DEPARTMENT' , max_fees:{$max:'$FEES'}  , minimum:{$min:'$FEES'} }}])
4.=> db.STUDENT.aggregate([{ $match:{CITY: 'Rajkot'} } ,  {$count:'total_student'} ])
5.=> db.STUDENT.aggregate([  {$group:{_id:'$DEPARTMENT' , total_student:{$sum:1}}} ])
_________________________________________________________________________________________________________________________
LEB : 22 
---------
PART : A |
---------
1.=> db.STUDENT2.find({FirstName:/^k/i } )
2.=> db.STUDENT2.find({FirstName:/...../i})
3.=> db.STUDENT2.find({City:/.....a$/i},{FirstName:1  , LastName: 1 , City:1} )
4.=> db.STUDENT2.find({LastName:/tel$/i},{FirstName:1  , LastName: 1} )	
5.=> db.STUDENT2.find({FirstName:/^ha.*t$/i},{FirstName:1  , LastName: 1 , City:1} )
6.=>db.STUDENT2.find({FirstName:/^k.y/i},{FirstName:1  , LastName: 1 , City:1} )
7.=> db.STUDENT2.find({LastName:/jer/i})
8.=> db.STUDENT2.find({City:/^[rb]/i},{FirstName:1  , LastName: 1 , City:1} )
9.=>  //   
10.=>  db.STUDENT2.find({Website:{$ne:null}} )
----------
PART : B |
----------
1.=> db.STUDENT2.find({FirstName:/^[a-h]/i} )
2.=> db.STUDENT2.find({FirstName:/^.[AEIOU]/i} )
3.=> ///
4.=>db.STUDENT2.find({Website:/^bi/i} ,{FirstName:1 , LastName:1 ,Website:1 } )
5.=> db.STUDENT2.find({LastName:/....../i} ,{LastName:1 ,City:1 } )
----------
PART : C  |
----------
1.=> db.STUDENT2.find({City:{$not:/^ba.../i}} ,{City:1 } ) // ERROR THIS QUERY 
2.=>
3.=> db.STUDENT2.find({Division:/bc/i} )
4.=> db.STUDENT2.find( {
    $and: [
      { Division: /^.{6}$/i }, // Matches Division with exactly 6 characters (case-insensitive)
      { Website: { $ne: null } } // Ensures the Website field is not null
    ]
  })
5.=> db.STUDENT2.find({FirstName:{$not:/^.[AEIOU]/i}} )
_________________________________________________________________________________________________________________________
LEB : 24
[
  {
    "EID": 101,
    "EName": "Rahul",
    "Department": "Admin",
    "Salary": 56000,
    "JoiningDate": "1-Jan-90",
    "City": "Rajkot"
  },
  {
    "EID": 102,
    "EName": "Hardik",
    "Department": "IT",
    "Salary": 18000,
    "JoiningDate": "25-Sep-90",
    "City": "Ahmedabad"
  },
  {
    "EID": 103,
    "EName": "Bhavin",
    "Department": "HR",
    "Salary": 25000,
    "JoiningDate": "14-May-91",
    "City": "Baroda"
  },
  {
    "EID": 104,
    "EName": "Bhoomi",
    "Department": "Admin",
    "Salary": 39000,
    "JoiningDate": "8-Feb-91",
    "City": "Rajkot"
  },
  {
    "EID": 105,
    "EName": "Rohit",
    "Department": "IT",
    "Salary": 17000,
    "JoiningDate": "23-Jul-90",
    "City": "Jamnagar"
  },
  {
    "EID": 106,
    "EName": "Priya",
    "Department": "IT",
    "Salary": 9000,
    "JoiningDate": "18-Oct-90",
    "City": "Ahmedabad"
  },
  {
    "EID": 107,
    "EName": "Neha",
    "Department": "HR",
    "Salary": 34000,
    "JoiningDate": "25-Dec-91",
    "City": "Rajkot"
  }
]

-----------
PART : A  |
-----------
1.=>db.EMPLOYEE1.aggregate([{$group:{_id:null , hh:{$max:'$Salary'} , ll:{$min:'$Salary'} , avg:{$avg:'$Salary'} , total:{$sum:'$Salary'}}}])
2.=> db.EMPLOYEE1.countDocuments()
3.=>db.EMPLOYEE1.aggregate([ {$match:{ Department: 'IT'}} , {$group:{_id:null , hh:{$max:'$Salary'} }}])
4.=>db.EMPLOYEE1.aggregate([{$group:{_id:'$City' , totalemp:{$sum:1} } }]) 
5.=>
6.=>
